# @author Alejandro Galue <agalue@opennms.org>
#
# This solution expose 9094 on the k8s worker node.
# That means, kafka can be scaled up to the number of workers on the k8s cluster.
#
# KAFKA_HEAP_OPTS should be consistent with resources.requests.memory
#
# WARNING: the kafka process runs as root, which is not allowed on OpenShift
# WARNING: due to HZN-1387, SASL/SSL cannot be used with Sentinel older than Horizon 23.0.1;
#          unless, it is applied only to the external face (for Minions on port 9094).

---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: opennms
  labels:
    app: kafka
    deployment: drift
spec:
  clusterIP: None
  ports:
  - port: 9092
    name: inside
  - port: 9094
    name: outside
  - port: 9999
    name: jmx
  selector:
    app: kafka

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: opennms
  labels:
    app: kafka
    deployment: drift
spec:
  serviceName: kafka
  replicas: 3
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
        deployment: drift
    spec:
      terminationGracePeriodSeconds: 300
      initContainers:
      - name: check-zk-ready
        image: busybox
        imagePullPolicy: IfNotPresent
        command:
        - sh
        - -c
        - 'until [ "imok" = "$(echo ruok | nc $ZK_SERVER $ZK_PORT)" ]; do echo "$(date) - Waiting for $ZK_SERVER:$ZK_PORT..."; sleep 2; done;'
        env:
          - name: ZK_SERVER
            value: zookeeper.opennms.svc.cluster.local
          - name: ZK_PORT
            value: '2181'
      containers:
      - name: kafka
        image: wurstmeister/kafka:2.11-2.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9092
          name: inside
        - containerPort: 9094
          hostPort: 9094
          name: outside
        - containerPort: 9999
          name: jmx
        env:
        - name: BROKER_ID_COMMAND
          value: echo ${HOSTNAME##*-}
        - name: HOSTNAME_COMMAND
          value: curl http://169.254.169.254/latest/meta-data/public-hostname
        - name: KAFKA_ADVERTISED_LISTENERS
          value: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
        - name: KAFKA_LISTENERS
          value: INSIDE://:9092,OUTSIDE://:9094
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: INSIDE
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper.opennms.svc.cluster.local:2181/kafka
        - name: KAFKA_DEFAULT_REPLICATION_FACTOR
          value: '2'
        - name: KAFKA_MIN_INSYNC_REPLICAS
          value: '1'
        - name: KAFKA_NUM_PARTITIONS
          value: '32'
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: 'true'
        - name: KAFKA_DELETE_TOPIC_ENABLE
          value: 'false'
        - name: KAFKA_CONTROLLED_SHUTDOWN_ENABLE
          value: 'true'
        - name: KAFKA_JMX_OPTS
          value: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=localhost -Dcom.sun.management.jmxremote.rmi.port=9999
        - name: JMX_PORT
          value: '9999'
        - name: KAFKA_HEAP_OPTS
          value: -Xmx2G -Xms1G
        volumeMounts:
        - name: kafka-data
          mountPath: /kafka
        resources:
          limits:
            memory: 4Gi
            cpu: 2
          requests:
            memory: 2Gi
            cpu: 1
        readinessProbe:
          tcpSocket:
            port: inside
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: inside
          initialDelaySeconds: 60
          periodSeconds: 60
  volumeClaimTemplates:
  - metadata:
      name: kafka-data
    spec:
      accessModes:
      - ReadWriteOnce
      storageClassName: aws-ebs
      resources:
        requests:
          storage: 20Gi