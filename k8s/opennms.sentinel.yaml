apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sentinel
  labels:
    app: sentinel
spec:
  serviceName: sentinel
  replicas: 4
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: sentinel
  template:
    metadata:
      labels:
        app: sentinel
    spec:
      terminationGracePeriodSeconds: 60
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - onms
      initContainers:
      # Initialize Sentinel Configuration
      # Requires the same image/version used at runtime: sentinel
      - name: init-config
        image: opennms/sentinel:drift261
        imagePullPolicy: IfNotPresent
        command: [ bash, /init.sh ]
        env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              key: TIMEZONE
              name: common-settings
        - name: INSTANCE_ID
          valueFrom:
            configMapKeyRef:
              key: OPENNMS_INSTANCE_ID
              name: common-settings
        - name: KAFKA_SERVER
          valueFrom:
            configMapKeyRef:
              key: KAFKA_SERVER
              name: common-settings
        - name: ELASTIC_SERVER
          valueFrom:
            configMapKeyRef:
              key: ELASTIC_SERVER
              name: common-settings
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              key: ELASTIC_PASSWORD
              name: onms-passwords
        - name: ELASTIC_INDEX_STRATEGY_FLOWS
          value: hourly
        - name: ELASTIC_REPLICATION_FACTOR
          value: '0'
        - name: ELASTIC_SHARDS
          value: '10'
        - name: OPENNMS_HTTP_USER
          value: admin
        - name: OPENNMS_HTTP_PASS
          valueFrom:
            secretKeyRef:
              key: OPENNMS_UI_ADMIN_PASSWORD
              name: onms-passwords
        - name: NUM_LISTENER_THREADS
          value: '96'
        volumeMounts:
        - name: etc-overlay
          mountPath: /etc-overlay
        - name: init-scripts
          mountPath: /init.sh
          subPath: onms-sentinel-init.sh
      # Wait for all the dependencies
      - name: dependencies
        image: waisbrot/wait
        imagePullPolicy: IfNotPresent
        env:
        - name: TARGETS
          value: opennms-core.opennms.svc.cluster.local:8980
        - name: TIMEOUT
          value: '600'
      containers:
      - name: sentinel
        image: opennms/sentinel:drift261
        imagePullPolicy: IfNotPresent
        args:
        - -c
        ports:
        - containerPort: 8181
          name: http
        - containerPort: 8301
          name: karaf
        env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              key: TIMEZONE
              name: common-settings
        - name: NUM_LISTENER_THREADS
          value: '96'
        - name: SENTINEL_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SENTINEL_LOCATION
          valueFrom:
            configMapKeyRef:
              key: MINION_LOCATION
              name: common-settings
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_SERVER
              name: common-settings
        - name: POSTGRES_PORT
          value: '5432'
        - name: POSTGRES_USER
          value: opennms
        - name: POSTGRES_PASSWORD
          value: opennms
        - name: POSTGRES_DB
          value: opennms
        - name: OPENNMS_HTTP_URL
          value: http://opennms-core.opennms.svc.cluster.local:8980/opennms
        - name: OPENNMS_HTTP_USER
          value: admin
        - name: OPENNMS_HTTP_PASS
          valueFrom:
            secretKeyRef:
              key: OPENNMS_UI_ADMIN_PASSWORD
              name: onms-passwords
        - name: MEM_TOTAL_MB
          valueFrom:
            resourceFieldRef:
              resource: requests.memory
              divisor: 1Mi
        - name: JAVA_OPTS
          value: -XX:+UseG1GC -Xms$(MEM_TOTAL_MB)m -Xmx$(MEM_TOTAL_MB)m -Dcom.datastax.driver.FORCE_NIO=true
        - name: MAX_FD # Maximum File Descriptors
          value: '65536'
        volumeMounts:
        - name: etc-overlay
          mountPath: /opt/sentinel-etc-overlay
        resources: # When Cassandra is used, allow enough memory for the resource cache and the ring buffer
          limits:
            cpu: 4
            memory: 8Gi
          requests:
            cpu: 2
            memory: 4Gi
        readinessProbe:
         tcpSocket:
           port: karaf
         initialDelaySeconds: 30
         periodSeconds: 10
        #livenessProbe:
        # exec:
        #   command:
        #   - /health.sh
        # initialDelaySeconds: 60
        # periodSeconds: 60
        # timeoutSeconds: 15
      volumes:
      - name: etc-overlay
        emptyDir: {}
      - name: init-scripts
        configMap:
          name: init-scripts
