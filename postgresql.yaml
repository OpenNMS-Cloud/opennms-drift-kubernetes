# @author Alejandro Galue <agalue@opennms.org>
#
# Make sure the to tune the max_connections to accomodate ONMS, the UI servers and Grafana.
#
# TODO
# - Add an initContainer to configure master/slave; but, how to manage replicas if the master can be moved ?
# - Use a more advanced approach: https://github.com/zalando-incubator/postgres-operator

---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  labels:
    app: postgres
    deployment: drift
spec:
  clusterIP: None
  ports:
  - port: 5432
  selector:
    app: postgres

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  labels:
    app: postgres
    deployment: drift
spec:
  serviceName: postgresql
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
        deployment: drift
    spec:
      containers:
      - name: postgres
        image: postgres:10.4
        imagePullPolicy: IfNotPresent
        command: [ docker-entrypoint.sh, postgres, -c, 'shared_buffers=256MB', -c, 'max_connections=200' ]
        env:
        - name: PGUSER
          value: postgres
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: postgres
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 5432
          name: pg
        volumeMounts:
        - name: pg-data
          mountPath: /var/lib/postgresql/data
        resources:
          limits:
            cpu: 4
            memory: 4Gi
          requests:
            cpu: 2
            memory: 2Gi
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $HOSTNAME
          initialDelaySeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $HOSTNAME
          initialDelaySeconds: 30
          periodSeconds: 30
  volumeClaimTemplates:
  - metadata:
      name: pg-data
    spec:
      accessModes:
      - ReadWriteOnce
      storageClassName: aws-ebs
      resources:
        requests:
          storage: 20Gi
