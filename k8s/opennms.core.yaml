apiVersion: v1
kind: Service
metadata:
  name: opennms-core
  labels:
    app: onms
spec:
  clusterIP: None
  ports:
  - port: 8980
    name: http
  - port: 8101
    name: karaf
  selector:
    app: onms

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: onms
  labels:
    app: onms
spec:
  serviceName: opennms-core
  replicas: 1 # The solution only allows 1 instance
  selector:
    matchLabels:
      app: onms
  template:
    metadata:
      labels:
        app: onms
    spec:
      terminationGracePeriodSeconds: 120
      securityContext: # In order to be able to write data as non-root on the volumes
        fsGroup: 10001 # Default opennms user
      initContainers:
      # Initializes/Updates OpenNMS Configuration
      # Requires the same image/version used at runtime: horizon
      - name: init-config
        image: opennms/horizon:26.0.1
        imagePullPolicy: IfNotPresent
        command: [ bash, /init.sh ]
        env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              key: TIMEZONE
              name: common-settings
        - name: INSTANCE_ID
          valueFrom:
            configMapKeyRef:
              key: OPENNMS_INSTANCE_ID
              name: common-settings
        - name: ENABLE_ALEC
          value: 'false'
        - name: FEATURES_LIST
          value: opennms-alarm-history-elastic,opennms-es-rest,opennms-kafka-producer,opennms-situation-feedback # For H24+
        - name: KAFKA_SERVER
          valueFrom:
            configMapKeyRef:
              key: KAFKA_SERVER
              name: common-settings
        - name: ELASTIC_SERVER
          valueFrom:
            configMapKeyRef:
              key: ELASTIC_SERVER 
              name: common-settings
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              key: ELASTIC_PASSWORD
              name: onms-passwords
        - name: JAEGER_AGENT_HOST # Should be consistent with jaeger.yaml
          value: onms-tracing-agent.opennms.svc.cluster.local
        volumeMounts:
        - name: etc # Persistent volume for OpenNMS Configuration
          mountPath: /opennms-etc
        - name: init-scripts
          mountPath: /init.sh
          subPath: onms-core-init.sh
      containers:
      - name: onms
        image: opennms/horizon:26.0.1
        imagePullPolicy: IfNotPresent
        args:
        - -s
        ports:
        - containerPort: 8101
          name: karaf
        - containerPort: 8980
          name: http
        env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              key: TIMEZONE
              name: common-settings
        - name: MEM_TOTAL_MB
          valueFrom:
            resourceFieldRef:
              resource: requests.memory
              divisor: 1Mi
        - name: JAVA_OPTS # Preferred way instead of opennms.conf
          value: -Xms$(MEM_TOTAL_MB)m -Xmx$(MEM_TOTAL_MB)m
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_SERVER
              name: common-settings
        - name: POSTGRES_PORT
          value: '5432'
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRES_PASSWORD
              name: onms-passwords
        - name: OPENNMS_DBNAME
          value: opennms
        - name: OPENNMS_DBUSER
          value: opennms
        - name: OPENNMS_DBPASS
          value: opennms
        volumeMounts:
        - name: etc
          mountPath: /opt/opennms/etc
        - name: karaf-deploy
          mountPath: /opt/opennms/deploy
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 500m
            memory: 4Gi
        readinessProbe:
          httpGet:
            path: /opennms/login.jsp
            port: http
          initialDelaySeconds: 15
          periodSeconds: 15
        livenessProbe:
          httpGet:
            path: /opennms/login.jsp
            port: http
          initialDelaySeconds: 30
          periodSeconds: 60
      volumes:
      - name: init-scripts
        configMap:
          name: init-scripts
      - name: karaf-deploy
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: etc
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
