# @author Alejandro Galue <agalue@opennms.org>
# Inspired by https://github.com/Yolean/kubernetes-kafka/tree/master/kafka
#
# TODO
# - The kafka process runs as root. Verify if this can be changed
# - How to expose Kafka Nodes to the outside world ?

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka
    deployment: drift
  name: kafka
spec:
  clusterIP: None
  ports:
  - port: 9092
  selector:
    app: kafka

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka
    deployment: drift
  name: ext-kafka
spec:
  type: LoadBalancer
  ports:
  - port: 9092
    targetPort: 9092
  selector:
    app: kafka

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  labels:
    app: kafka
    deployment: drift
spec:
  serviceName: kafka
  replicas: 3
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
        deployment: drift
    spec:
      initContainers:
      - name: check-zk-ready
        image: busybox
        imagePullPolicy: IfNotPresent
        env:
          - name: ZK_SERVER
            value: zookeeper.default.svc.cluster.local
          - name: ZK_PORT
            value: '2181'
        command: [ 'sh', '-c', 'until [ "imok" = "$(echo ruok | nc $ZK_SERVER $ZK_PORT)" ]; do echo "$(date) - Waiting for $ZK_SERVER:$ZK_PORT..."; sleep 2; done;' ]
      containers:
      - name: kafka
        image: wurstmeister/kafka:2.11-1.1.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9092
          name: client
        env:
        - name: BROKER_ID_COMMAND
          value: echo ${HOSTNAME##*-}
        - name: HOSTNAME_COMMAND
          value: hostname -f
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper.default.svc.cluster.local:2181/kafka
        - name: KAFKA_DEFAULT_REPLICATION_FACTOR
          value: '2'
        - name: KAFKA_MIN_INSYNC_REPLICAS
          value: '1'
        - name: KAFKA_NUM_PARTITIONS
          value: '16'
        - name: KAFKA_DELETE_TOPIC_ENABLE
          value: 'false'
        - name: KAFKA_CONTROLLED_SHUTDOWN_ENABLE
          value: 'true'
        - name: KAFKA_JMX_OPTS
          value: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=localhost -Dcom.sun.management.jmxremote.rmi.port=9999
        - name: JMX_PORT
          value: '9999'
        volumeMounts:
        - name: kafka-data
          mountPath: /kafka
        resources:
          limits:
            memory: 4Gi
            cpu: 2
          requests:
            memory: 2Gi
            cpu: 1
        readinessProbe:
          tcpSocket:
            port: client
          initialDelaySeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          tcpSocket:
            port: client
          initialDelaySeconds: 30
          periodSeconds: 60
  volumeClaimTemplates:
  - metadata:
      name: kafka-data
    spec:
      accessModes:
      - ReadWriteOnce
      storageClassName: aws-ebs
      resources:
        requests:
          storage: 20Gi