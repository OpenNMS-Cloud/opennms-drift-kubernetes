# @author Alejandro Galue <agalue@opennms.org>
#
# TODO
# - How to activate Karaf features ? Maybe passing the whole org.apache.karaf.features.cfg for now ?
#
# ENHANCEMENTS
# - A volume + "git sync" container (note that this volume can be an emptyDir populated by GIT,
#   so no persistentVolume is required)

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: onms
    deployment: drift
  name: opennms-core
spec:
  clusterIP: None
  ports:
  - port: 8980
    name: http
  - port: 8101
    name: karaf
  selector:
    app: onms

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: onms
    deployment: drift
  name: ext-onms
spec:
  type: LoadBalancer
  ports:
  - port: 8980
    targetPort: 8980
  selector:
    app: onms

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: onms
  labels:
    app: onms
    deployment: drift
spec:
  serviceName: opennms-core
  replicas: 1
  selector:
    matchLabels:
      app: onms
  template:
    metadata:
      labels:
        app: onms
        deployment: drift
    spec:
      initContainers:
      - name: check-postgresql-ready
        image: postgres:10.4
        imagePullPolicy: IfNotPresent
        command: [ 'sh', '-c', 'until pg_isready -h $DB_SERVER -p $DB_PORT; do echo "$(date) - Waiting for $DB_SERVER:$DB_PORT..."; sleep 2; done;' ]
        env:
          - name: DB_SERVER
            value: postgresql.default.svc.cluster.local
          - name: DB_PORT
            value: '5432'
      - name: check-cassandra-ready
        image: busybox
        imagePullPolicy: IfNotPresent
        command: [ 'sh', '-c', 'until nc -zv $TARGET_SERVER $TARGET_PORT; do echo "$(date) - Waiting for $TARGET_SERVER:$TARGET_PORT..."; sleep 2; done;' ]
        env:
          - name: TARGET_SERVER
            value: cassandra.default.svc.cluster.local
          - name: TARGET_PORT
            value: '9042'
      - name: check-amq-ready
        image: busybox
        imagePullPolicy: IfNotPresent
        command: [ 'sh', '-c', 'until nc -zv $TARGET_SERVER $TARGET_PORT; do echo "$(date) - Waiting for $TARGET_SERVER:$TARGET_PORT..."; sleep 2; done;' ]
        env:
          - name: TARGET_SERVER
            value: activemq.default.svc.cluster.local
          - name: TARGET_PORT
            value: '61616'
      - name: check-kafka-ready
        image: busybox
        imagePullPolicy: IfNotPresent
        command: [ 'sh', '-c', 'until nc -zv $TARGET_SERVER $TARGET_PORT; do echo "$(date) - Waiting for $TARGET_SERVER:$TARGET_PORT..."; sleep 2; done;' ]
        env:
          - name: TARGET_SERVER
            value: kafka.default.svc.cluster.local
          - name: TARGET_PORT
            value: '9092'
      - name: newts-initialization
        image: opennms/horizon-core-web:22.0.1-1
        imagePullPolicy: IfNotPresent
        command: [ '/opt/opennms/bin/newts', 'init', '-r', '2' ]
        volumeMounts:
        - name: onms-etc
          mountPath: /opt/opennms/etc/opennms.properties.d/newts.properties
          subPath: newts.properties
      containers:
      - name: onms
        image: opennms/horizon-core-web:22.0.1-1
        imagePullPolicy: IfNotPresent
        command: [ '/docker-entrypoint.sh', '-s' ] # TODO What about using this ? args: ['-s']
        ports:
        - containerPort: 8101
          name: karaf
        - containerPort: 8980
          name: http
        env:
        - name: JAVA_OPTS
          value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
        - name: POSTGRES_HOST
          value: postgresql.default.svc.cluster.local
        - name: POSTGRES_PORT
          value: '5432'
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: postgres
        - name: OPENNMS_DBNAME
          value: opennms
        - name: OPENNMS_DBUSER
          value: opennms
        - name: OPENNMS_DBPASS
          value: opennms
        volumeMounts:
        - name: onms-etc
          mountPath: /opt/opennms-etc-overlay/org.opennms.features.datachoices.cfg
          subPath: org.opennms.features.datachoices.cfg
        - name: onms-etc
          mountPath: /opt/opennms-etc-overlay/org.opennms.features.flows.persistence.elastic.cfg
          subPath: org.opennms.features.flows.persistence.elastic.cfg
        - name: onms-etc
          mountPath: /opt/opennms-etc-overlay/org.opennms.plugin.elasticsearch.rest.forwarder.cfg
          subPath: org.opennms.plugin.elasticsearch.rest.forwarder.cfg
        - name: onms-etc
          mountPath: /opt/opennms-etc-overlay/opennms.properties.d/newts.properties
          subPath: newts.properties
        - name: onms-etc
          mountPath: /opt/opennms-etc-overlay/opennms.properties.d/kafka.properties
          subPath: kafka.properties
        - name: onms-etc
          mountPath: /opt/opennms-etc-overlay/opennms.properties.d/amq.properties
          subPath: amq.properties
        resources:
          limits:
            cpu: 4
            memory: 8Gi
          requests:
            cpu: 2
            memory: 4Gi
      volumes:
      - name: onms-etc
        configMap:
          name: opennms-core-overlay
