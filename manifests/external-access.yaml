# @author Alejandro Galue <agalue@opennms.org>
#
# The dns-controller will automatically create a CNAME for each host pointing to the Ingress ELB when --watch-ingress=true is applied.
# Warning: please use your own domains.
#          this is not intended to be used by any user.

---
apiVersion: certmanager.k8s.io/v1alpha1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  labels:
    deployment: drift
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: agalue@opennms.org
    privateKeySecretRef:
      name: letsencrypt-prod
    http01: {}

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-rules
  namespace: opennms
  labels:
    deployment: drift
  annotations:
    kubernetes.io/ingress.class: nginx
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    certmanager.k8s.io/acme-http01-edit-in-place: 'true'
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    ingress.kubernetes.io/affinity: cookie
    ingress.kubernetes.io/session-cookie-name: route
    ingress.kubernetes.io/session-cookie-hash: sha1
spec:
  tls:
    - secretName: k8s-opennms-org-ingress
      hosts:
        - cassandra-reaper.k8s.opennms.org
        - grafana.k8s.opennms.org
        - hasura.k8s.opennms.org
        - kafka-manager.k8s.opennms.org
        - kibana.k8s.opennms.org
        - onms.k8s.opennms.org
        - onmsui.k8s.opennms.org
  rules:
    - host: cassandra-reaper.k8s.opennms.org
      http:
        paths:
          - path: /
            backend:
              serviceName: cassandra-reaper
              servicePort: 8080
    - host: grafana.k8s.opennms.org
      http:
        paths:
          - path: /
            backend:
              serviceName: grafana
              servicePort: 3000
    - host: hasura.k8s.opennms.org
      http:
        paths:
          - path: /
            backend:
              serviceName: hasura
              servicePort: 8080
    - host: kafka-manager.k8s.opennms.org
      http:
        paths:
          - path: /
            backend:
              serviceName: kafka-manager
              servicePort: 9000
    - host: kibana.k8s.opennms.org
      http:
        paths:
          - path: /
            backend:
              serviceName: kibana
              servicePort: 5601
    - host: onms.k8s.opennms.org
      http:
        paths:
          - path: /
            backend:
              serviceName: opennms-core
              servicePort: 8980
    - host: onmsui.k8s.opennms.org
      http:
        paths:
          - path: /
            backend:
              serviceName: opennms-ui
              servicePort: 8980

# An alternative to the following is creating Route53 entries through Terraform to avoid having an ELB as an entry point for Minions.
# The Route53 entries should point to all the hosts.
# Another alternative is use the K8S Hostname on the advertised listener, and then use that on Minions.
---
apiVersion: v1
kind: Service
metadata:
  name: ext-kafka
  namespace: opennms
  labels:
    app: kafka
    deployment: drift
  annotations:
    dns.alpha.kubernetes.io/external: kafka.k8s.opennms.org.
spec:
  type: LoadBalancer
  ports:
  - port: 9094
    targetPort: 9094
  selector:
    app: kafka
