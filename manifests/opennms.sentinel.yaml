# @author Alejandro Galue <agalue@opennms.org>
#
# Sentinel is required only for Processing Flows and Telemetry Data.
#
# NOTES:
# - This manifest is designed to work with the unaltered version of the image from:
#   https://hub.docker.com/r/opennms/sentinel
#   https://github.com/opennms-forge/docker-sentinel
# - It is perfectly valid to have all the required configuration files on a config-map,
#   and then mount those files to the overlay directory, instead of using an initContainer.
# - Using a Deployment instead of StatefulSet, as the Sentinel ID is not used at the moment.
#
# WARNING:
# - The image tag bleeding refers to the upcoming version of OpenNMS (unstable)

---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: sentinel
  namespace: opennms
spec:
  maxReplicas: 5
  minReplicas: 2
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sentinel
  targetCPUUtilizationPercentage: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sentinel
  namespace: opennms
  labels:
    app: sentinel
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sentinel
  template:
    metadata:
      labels:
        app: sentinel
    spec:
      terminationGracePeriodSeconds: 60
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - onms
      initContainers:
      # Requires the same image/version used at runtime: sentinel
      - name: init-config
        image: agalue/sentinel:24.1.1-1
        imagePullPolicy: IfNotPresent
        command: [ bash, /init.sh ]
        env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              key: TIMEZONE
              name: common-settings
        - name: INSTANCE_ID
          valueFrom:
            configMapKeyRef:
              key: OPENNMS_INSTANCE_ID
              name: common-settings
        - name: KAFKA_SERVER
          value: kafka.opennms.svc.cluster.local
        - name: KAFKA_GROUP_ID
          value: Sentinel
        - name: CASSANDRA_SERVER
          value: cassandra.opennms.svc.cluster.local
        - name: ELASTIC_SERVER
          value: esdata.opennms.svc.cluster.local
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              key: ELASTICSEARCH_PASSWORD
              name: onms-passwords
        - name: ELASTIC_INDEX_STRATEGY_FLOWS
          valueFrom:
            configMapKeyRef:
              key: ELASTIC_INDEX_STRATEGY_FLOWS
              name: common-settings
        - name: OPENNMS_HTTP_USER
          value: admin
        - name: OPENNMS_HTTP_PASS
          valueFrom:
            secretKeyRef:
              key: OPENNMS_UI_ADMIN_PASSWORD
              name: onms-passwords
        - name: NUM_LISTENER_THREADS
          valueFrom:
            configMapKeyRef:
              key: KAFKA_NUM_PARTITIONS
              name: common-settings
        volumeMounts:
        - name: etc-overlay
          mountPath: /etc-overlay
        - name: opennms-config
          mountPath: /init.sh
          subPath: onms-sentinel-init.sh
      - name: dependencies
        image: waisbrot/wait
        imagePullPolicy: IfNotPresent
        env:
        - name: TARGETS
          value: opennms-core.opennms.svc.cluster.local:8980
        - name: TIMEOUT
          value: '600'
      containers:
      - name: sentinel
        image: agalue/sentinel:24.1.1-1
        imagePullPolicy: IfNotPresent
        args:
          - -c
        ports:
        - containerPort: 8181
          name: http
        - containerPort: 8301
          name: karaf
        env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              key: TIMEZONE
              name: common-settings
        - name: MEM_TOTAL_MB
          valueFrom:
            resourceFieldRef:
              resource: requests.memory
              divisor: 1Mi
        - name: JAVA_OPTS
          value: -XX:+UseG1GC -Xms$(MEM_TOTAL_MB)m -Xmx$(MEM_TOTAL_MB)m
        - name: POSTGRES_HOST
          value: postgresql.opennms.svc.cluster.local
        - name: POSTGRES_PORT
          value: '5432'
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRES_PASSWORD
              name: onms-passwords
        - name: POSTGRES_DB
          value: opennms
        - name: OPENNMS_HTTP_URL
          value: http://opennms-core.opennms.svc.cluster.local:8980/opennms
        - name: SENTINEL_LOCATION
          value: Sentinel
        - name: OPENNMS_HTTP_USER
          value: admin
        - name: OPENNMS_HTTP_PASS
          valueFrom:
            secretKeyRef:
              key: OPENNMS_UI_ADMIN_PASSWORD
              name: onms-passwords
        volumeMounts:
        - name: etc-overlay
          mountPath: /opt/sentinel-etc-overlay
        resources:
          limits:
            cpu: 1
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1Gi
        readinessProbe:
          tcpSocket:
            port: karaf
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - 'if sshpass -p admin ssh -o StrictHostKeyChecking=no -p 8301 admin@localhost health:check | grep --quiet "Everything is awesome"; then exit 0; else exit 1; fi'
            # https://issues.opennms.org/browse/NMS-12120
            # - 'if /opt/sentinel/bin/client health:check | grep --quiet "Everything is awesome"; then exit 0; else exit 1; fi'
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 20
      volumes:
      - name: etc-overlay
        emptyDir: {}
      - name: opennms-config
        configMap:
          name: opennms-config
