diff --git a/manifests/config/onms-core-init.sh b/manifests/config/onms-core-init.sh
index dde7bca..39b0f07 100644
--- a/manifests/config/onms-core-init.sh
+++ b/manifests/config/onms-core-init.sh
@@ -4,7 +4,7 @@
 # Requirements:
 # - Must run within a init-container based on opennms/horizon-core-web.
 #   Version must match the runtime container.
-# - Horizon 24 or newer is required.
+# - Horizon 25 or newer is required.
 # - The rsync command is required, and it should be pre-installed on the chosen image.
 #
 # Purpose:
@@ -138,6 +138,11 @@ opennms.web.base-url=https://%x%c/
 org.opennms.security.disableLoginSuccessEvent=true
 EOF
 
+echo "Configure Event Sink..."
+cat <<EOF > $CONFIG_DIR/opennms.properties.d/event-sink.properties
+org.opennms.netmgt.eventd.sink.enable=true
+EOF
+
 # Enable OSGi features
 if [[ $FEATURES_LIST ]]; then
   echo "Enabling features: $FEATURES_LIST ..."
@@ -154,6 +159,15 @@ EOF
   echo "opennms-core-tracing-jaeger" > $CONFIG_DIR/featuresBoot.d/jaeger.boot
 fi
 
+# Enable ALEC
+cat <<EOF > $CONFIG_DIR/featuresBoot.d/alec.boot
+alec-opennms-distributed wait-for-kar=opennms-alec-plugin
+EOF
+
+# Services
+
+sed -r -i '/enabled="false"/{$!{N;s/ enabled="false"[>]\n(.*OpenNMS:Name=Syslogd.*)/>\n\1/}}' $CONFIG_DIR/service-configuration.xml
+
 # Configure Sink and RPC to use Kafka, and the Kafka Producer.
 if [[ $KAFKA_SERVER ]]; then
   echo "Configuring Kafka..."
@@ -193,12 +207,13 @@ EOF
 
   # Make sure to enable only what's needed for your use case
   cat <<EOF > $CONFIG_DIR/org.opennms.features.kafka.producer.cfg
-suppressIncrementalAlarms=true
+suppressIncrementalAlarms=false
 forward.metrics=true
 nodeRefreshTimeoutMs=300000
 alarmSyncIntervalMs=300000
 nodeTopic=${INSTANCE_ID}_nodes
 alarmTopic=${INSTANCE_ID}_alarms
+alarmFeedbackTopic=${INSTANCE_ID}.Alarm.Feedback
 eventTopic=${INSTANCE_ID}_events
 metricTopic=${INSTANCE_ID}_metrics
 topologyProtocols=bridge,cdp,isis,lldp,ospf
@@ -348,6 +363,20 @@ readTimeout=300000
 settings.index.number_of_shards=6
 settings.index.number_of_replicas=2
 EOF
+
+  echo "Configuring Situations Feedback..."
+  cat <<EOF > $CONFIG_DIR/org.opennms.features.situation-feedback.persistence.elastic.cfg
+elasticUrl=http://$ELASTIC_SERVER:9200
+globalElasticUser=elastic
+globalElasticPassword=$ELASTIC_PASSWORD
+elasticIndexStrategy=monthly
+connTimeout=30000
+readTimeout=300000
+# The following settings should be consistent with your ES cluster
+settings.index.number_of_shards=6
+settings.index.number_of_replicas=2
+EOF
+
 fi
 
 # Configure NXOS Resource Types
diff --git a/manifests/kafka.yaml b/manifests/kafka.yaml
index e21e63a..e848833 100644
--- a/manifests/kafka.yaml
+++ b/manifests/kafka.yaml
@@ -130,6 +130,13 @@ spec:
               divisor: 1Mi
         - name: KAFKA_HEAP_OPTS
           value: -Xms$(MEM_TOTAL_MB)m -Xmx$(MEM_TOTAL_MB)m
+        - name: INSTANCE_ID
+          valueFrom:
+            configMapKeyRef:
+              key: OPENNMS_INSTANCE_ID
+              name: common-settings
+        - name: KAFKA_CREATE_TOPICS
+          value: $(INSTANCE_ID).Nodes:$(KAFKA_NUM_PARTITIONS):2,$(INSTANCE_ID).Alarms:$(KAFKA_NUM_PARTITIONS):2,$(INSTANCE_ID).Alarm.Feedback:$(KAFKA_NUM_PARTITIONS):2,$(INSTANCE_ID).Topology.Vertices:$(KAFKA_NUM_PARTITIONS):2,$(INSTANCE_ID).Topology.Edges:$(KAFKA_NUM_PARTITIONS):2
         volumeMounts:
         - name: data
           mountPath: /kafka
diff --git a/manifests/kustomization.yaml b/manifests/kustomization.yaml
index b4ba130..723326a 100644
--- a/manifests/kustomization.yaml
+++ b/manifests/kustomization.yaml
@@ -17,6 +17,7 @@ resources:
 - opennms.core.yaml
 - opennms.minion.yaml
 - opennms.sentinel.yaml
+- opennms.alec.yaml
 - opennms.ui.yaml
 - grafana.yaml
 - grafana.helm.yaml
@@ -34,6 +35,7 @@ configMapGenerator:
   - config/onms-core-init.sh
   - config/onms-minion-init.sh
   - config/onms-sentinel-init.sh
+  - config/onms-alec-init.sh
   - config/onms-ui-init.sh
   - config/onms-ui-nfs.sh
 - name: common-settings
diff --git a/manifests/opennms.core.yaml b/manifests/opennms.core.yaml
index 82534fb..b0a869f 100644
--- a/manifests/opennms.core.yaml
+++ b/manifests/opennms.core.yaml
@@ -65,6 +65,19 @@ spec:
       securityContext: # In order to be able to write data as non-root on the volumes
         fsGroup: 10001 # Default opennms user
       initContainers:
+      # Initialize ALEC
+      - name: alec-plugin
+        image: busybox
+        command: [ sh, -c ]
+        args: [ "wget $(PLUGIN_URL) && cp opennms-alec-plugin.kar /plugin/" ]
+        env:
+        - name: ALEC_VERSION
+          value: 'v1.0.0'
+        - name: PLUGIN_URL
+          value: https://github.com/OpenNMS/alec/releases/download/$(ALEC_VERSION)/opennms-alec-plugin.kar
+        volumeMounts:
+        - name: karaf-deploy
+          mountPath: /plugin
       # Initialize OpenNMS Common Configuration
       # Requires the same image/version used at runtime: horizon-core-web
       - name: init-config
@@ -83,7 +96,7 @@ spec:
               key: OPENNMS_INSTANCE_ID
               name: common-settings
         - name: FEATURES_LIST
-          value: opennms-alarm-history-elastic,opennms-es-rest,opennms-kafka-producer # For H24+
+          value: opennms-alarm-history-elastic,opennms-es-rest,opennms-kafka-producer,opennms-situation-feedback # For H24+
         - name: CASSANDRA_SERVER
           value: cassandra.opennms.svc.cluster.local
         - name: CASSANDRA_REPLICATION_FACTOR
@@ -115,6 +128,8 @@ spec:
         volumeMounts:
         - name: etc # Persistent volume for OpenNMS Configuration
           mountPath: /opennms-etc
+        - name: karaf-deploy
+          mountPath: /opt/opennms/deploy
         - name: opennms-config
           mountPath: /init.sh
           subPath: onms-core-init.sh
@@ -219,6 +234,8 @@ spec:
         - name: etc
           mountPath: /opennms-etc
       volumes:
+      - name: karaf-deploy
+        emptyDir: {}
       - name: opennms-config
         configMap:
           name: opennms-config
diff --git a/serverless/slack-forwarder/alarm2slack.js b/serverless/slack-forwarder/alarm2slack.js
index 5c1f916..d3aeab1 100644
--- a/serverless/slack-forwarder/alarm2slack.js
+++ b/serverless/slack-forwarder/alarm2slack.js
@@ -112,3 +112,5 @@ module.exports.fission = async function(context) {
 module.exports.kubeless = async function(event, context) {
   return await sendAlarm(event.data);
 };
+
+module.exports.sendAlarm = sendAlarm;
\ No newline at end of file
diff --git a/serverless/slack-forwarder/package.json b/serverless/slack-forwarder/package.json
index 4f9856d..b72c92f 100644
--- a/serverless/slack-forwarder/package.json
+++ b/serverless/slack-forwarder/package.json
@@ -7,13 +7,15 @@
   "license": "MIT",
   "dependencies": {
     "axios": "^0.18.0",
+    "express": "^4.17.1",
     "html-to-mrkdwn": "^3.0.0"
   },
   "devDependencies": {
     "jest": "^24.1.0"
   },
   "scripts": {
-    "test": "jest"
+    "test": "jest",
+    "start": "node server.js"
   },
   "jest": {
     "testURL": "http://localhost"
