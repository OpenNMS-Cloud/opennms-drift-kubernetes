# @author Alejandro Galue <agalue@opennms.org>
#
# WARNING:
# - Make sure to tune the max_connections to accomodate ONMS, Sentinels servers, UI servers and Grafana.
# - Make sure to tune the rest of the settings based on https://pgtune.leopard.in.ua/#/
#   Speaking about shared_buffers, it is expected to be 25% of the requested memory.
# - The postgres user (uid: 999, gid: 999) cannot be used in OpenShift by default.
#
# TODO:
# - Use a simple approach to manage a cluster: add an init-container that configures master/slave
# - Use an advanced approach to manage a cluster: https://github.com/zalando-incubator/postgres-operator
# - Use barman to keep a backup of the DB and rebuild the server in case of data corruption

---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: opennms
  labels:
    app: postgres
    deployment: drift
spec:
  clusterIP: None
  ports:
  - port: 5432
  selector:
    app: postgres

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: opennms
  labels:
    app: postgres
    role: master
    deployment: drift
spec:
  serviceName: postgresql
  replicas: 1 # The solution only allows 1 instance
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
        role: master
        deployment: drift
    spec:
      containers:
      - name: postgres
        image: postgres:10.7-alpine
        imagePullPolicy: IfNotPresent
        command: # Settings for 2GB of RAM and 2 CPU
        - docker-entrypoint.sh
        - postgres
        - -c
        - 'shared_buffers=512MB'
        - -c
        - 'max_connections=300'
        - -c
        - 'effective_cache_size=1536MB'
        - -c
        - 'maintenance_work_mem=128MB'
        - -c
        - 'checkpoint_completion_target=0.9'
        - -c
        - 'wal_buffers=16MB'
        - -c
        - '''default_statistics_target=100'
        - -c
        - 'random_page_cost=1.1'
        - -c
        - 'effective_io_concurrency=300'
        - -c
        - 'work_mem=873kB'
        - -c
        - 'min_wal_size=1GB'
        - -c
        - 'max_wal_size=2GB'
        - -c
        - 'max_worker_processes=2'
        - -c
        - 'max_parallel_workers_per_gather=1'
        - -c
        - 'max_parallel_workers=2'
        env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              key: TIMEZONE
              name: common-settings
        - name: PGUSER
          value: postgres
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRES_PASSWORD
              name: onms-passwords
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 5432
          name: pg
        volumeMounts:
        - name: pg-data
          mountPath: /var/lib/postgresql/data
        resources:
          limits:
            cpu: 4
            memory: 4Gi
          requests:
            cpu: 2
            memory: 2Gi
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $HOSTNAME
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $HOSTNAME
          initialDelaySeconds: 30
          periodSeconds: 60
  volumeClaimTemplates:
  - metadata:
      name: pg-data
    spec:
      accessModes:
      - ReadWriteOnce
      storageClassName: ssd
      resources:
        requests:
          storage: 20Gi
